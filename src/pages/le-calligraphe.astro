---
import Base from "../layouts/Layout.astro";
import fs from 'fs';
import yaml from 'js-yaml';

// Charger le YAML et s'assurer que c'est un tableau plat
const rawData = yaml.load(fs.readFileSync('./src/content/ateliers.yaml', 'utf8'));
let rawAteliers = [];

if (Array.isArray(rawData)) {
  rawAteliers = rawData;
} else if (rawData && typeof rawData === 'object') {
  // flatten object values (each may be an array)
  rawAteliers = Object.values(rawData).flat();
} else {
  rawAteliers = [];
}

// Helper pour afficher les dates en français "5 février 2011"
function formatDateFR(dateStr) {
  if (!dateStr) return "";
  const months = [
    "janvier", "février", "mars", "avril", "mai", "juin",
    "juillet", "août", "septembre", "octobre", "novembre", "décembre"
  ];
  const date = new Date(dateStr.split(" ")[0]);
  return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;
}

// Construire ateliers par année (y compris multi-années) et éviter les doublons
const ateliersByYear = {};
rawAteliers.forEach(event => {
  const fromYear = new Date(event.from).getFullYear();
  const toYear = event.to ? new Date(event.to).getFullYear() : fromYear;
  for (let y = fromYear; y <= toYear; y++) {
    if (!ateliersByYear[y]) ateliersByYear[y] = [];
    const key = event.from + event.titre + event.lieu; // clé unique pour éviter doublons
    if (!ateliersByYear[y].some(e => (e.from + e.titre + e.lieu) === key)) {
      ateliersByYear[y].push(event);
    }
  }
});

// Trier les années décroissantes
const sortedYears = Object.keys(ateliersByYear).sort((a, b) => Number(b) - Number(a));
---

<Base title="Christophe Desmur, calligraphe et traducteur littéraire du chinois">
  <main class="mx-auto max-w-[735px] mt-14">
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">Christophe Desmur, calligraphe et traducteur littéraire du chinois</h1>
    <p class="text-lg mt-4 text-gray-600">
      Je suis calligraphe depuis plus de trente ans et m'intéresse particulièrement aux langues et civilisations asiatiques.
    </p>

    <p>
      Christophe Desmur, lyonnais de naissance, calligraphe, passionné par les langues et cultures du monde, je suis titulaire :</p>
<ul class="list-disc pl-5">
  <li>d’un diplôme d’étude universitaire générale en langue et civilisation coréennes&nbsp;;</li>
  <li>d’une maîtrise de langue et civilisation chinoises&nbsp;;</li>
  <li>d’un master de traduction littéraire du chinois vers le français.</li>
</ul>

<img
  src="/assets/christophe-desmur-calligraphie-chinoise.webp"
  alt="Christophe Desmur, calligraphie chinoise à Lyon, en train de calligraphier."
  style="width:100%; max-width:800px; height:auto;"
>

    <p>
      Je donne des cours de calligraphie et des cours de chinois individuels ou en groupe aussi bien aux enfants qu’aux adultes et anime également des stages (10 élèves maximum).
    </p>

    <h2 class="text-4xl lg:text-3xl font-bold text-gray-600 mt-10">Ateliers & interventions</h2>

    <!-- Navigation années -->
    <nav class="flex flex-wrap gap-4 mb-6">
      {sortedYears.map((annee, idx) => (
        <button
          class={`year-btn px-4 py-2 rounded font-semibold transition-colors duration-300
            ${idx === 0 ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}
          data-year={annee}
        >
          {annee}
        </button>
      ))}
    </nav>

    <!-- Sections par année -->
    {sortedYears.map((annee, idx) => (
      <section
        key={annee}
        class={`year-section ${idx === 0 ? '' : 'hidden'} mt-6`}
        data-year={annee}
      >
        <ul class="mt-4 space-y-2">
          {ateliersByYear[annee].map((event) => (
            <li key={event.from + event.titre + event.lieu} class="border-b pb-2">
              <strong>
                {event.to && event.to.split(" ")[0] !== event.from.split(" ")[0]
                  ? `${formatDateFR(event.from)} — ${formatDateFR(event.to)}`
                  : formatDateFR(event.from)}
              </strong>
              {" — "}
              {event.href ? (
                <a href={event.href} class="text-indigo-600 hover:underline">
                  {event.titre}
                </a>
              ) : (
                event.titre
              )}
              <br />
              <em>{event.lieu}</em>
              {event.details && (
                <>
                  <br />
                  {event.details}
                </>
              )}
            </li>
          ))}
        </ul>
      </section>
    ))}
  </main>

  <script>
    const yearButtons = document.querySelectorAll(".year-btn");

    yearButtons.forEach(btn => {
      btn.addEventListener("click", () => {
        const year = btn.dataset.year;

        // Afficher la section de l'année choisie
        document.querySelectorAll(".year-section").forEach(sec => {
          sec.classList.toggle("hidden", sec.dataset.year !== year);
        });

        // Changer le style du bouton actif
        yearButtons.forEach(b => {
          b.classList.remove("bg-indigo-600", "text-white");
          b.classList.add("bg-gray-200", "text-gray-800");
        });
        btn.classList.add("bg-indigo-600", "text-white");
        btn.classList.remove("bg-gray-200", "text-gray-800");

        // Scroll fluide
        const section = document.querySelector(`.year-section[data-year='${year}']`);
        if (section) {
          section.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      });
    });

    // Mettre en surbrillance le premier bouton
    if (yearButtons.length) {
      yearButtons[0].classList.add("bg-indigo-600", "text-white");
      yearButtons[0].classList.remove("bg-gray-200", "text-gray-800");
    }
  </script>
</Base>
