---
import Base from "../layouts/Layout.astro";
import fs from 'fs';
import yaml from 'js-yaml';

// Load YAML
const ateliers = yaml.load(fs.readFileSync('./src/content/ateliers.yaml', 'utf8'));

// --- Helpers ---
function sameDay(d1, d2) {
  return (
    d1.getFullYear() === d2.getFullYear() &&
    d1.getMonth() === d2.getMonth() &&
    d1.getDate() === d2.getDate()
  );
}

function formatDayFR(dayNum, mode = "date") {
  if (dayNum !== 1) return String(dayNum);
  switch (mode) {
    case "date": return "1<sup>er</sup>";
    case "ordinal": return "1<sup>e</sup>";
    default: return "1";
  }
}

function formatDateFR(date) {
  return `${formatDayFR(date.getDate(), "date")} ${date.toLocaleDateString("fr-FR", {
    month: "long",
    year: "numeric",
  })}`;
}

function formatDateFRNoYear(date) {
  return `${formatDayFR(date.getDate(), "date")} ${date.toLocaleDateString("fr-FR", {
    month: "long",
  })}`;
}

function formatDateRange(from, to) {
  if (sameDay(from, to)) {
    return formatDateFRNoYear(from);
  } else if (from.getFullYear() === to.getFullYear() && from.getMonth() === to.getMonth()) {
    return `${formatDayFR(from.getDate(), "date")} → ${formatDayFR(to.getDate(), "date")} ${to.toLocaleDateString("fr-FR", { month: "long" })}`;
  } else if (from.getFullYear() === to.getFullYear()) {
    return `${formatDateFRNoYear(from)} → ${formatDateFRNoYear(to)}`;
  } else {
    return `${formatDateFR(from)} → ${formatDateFR(to)}`;
  }
}

// --- Flatten events, filter for comités d’entreprise ---
const comiteEntrepriseEvents = Object.values(ateliers)
  .flat()
  .filter(event => event.href === "/comites-entreprise")
  .map(event => {
    const fromDate = new Date(event.from);
    const toDate = event.to ? new Date(event.to) : fromDate;
    return {
      ...event,
      fromDate,
      toDate,
      displayDate: formatDateRange(fromDate, toDate),
      multiYear: fromDate.getFullYear() !== toDate.getFullYear(),
      key: event.from + event.titre + event.lieu,
    };
  })
  .filter((event, index, self) =>
    index === self.findIndex(e => e.key === event.key)
  )
  .sort((a, b) => b.toDate - a.toDate);

const eventsByYear = Object.entries(
  comiteEntrepriseEvents.reduce((acc, event) => {
    const year = event.toDate.getFullYear();
    acc[year] = acc[year] || [];
    acc[year].push(event);
    return acc;
  }, {})
).sort(([yA], [yB]) => yB - yA);
---

<Base title="Ateliers pour comités d'entreprise">
  <main class="mx-auto max-w-[735px] mt-14">

    <h1 class="text-3xl font-bold mb-6">
      Ateliers de calligraphie chinoise pour le bien-être en entreprise
    </h1>

    <h2 class="text-2xl font-semibold mb-4">
      Mes formats d'atelier pour les comités d'entreprise
    </h2>

    <p class="mb-6">
      Je me déplace dans vos locaux avec tout le matériel nécessaire pour faire pratiquer à vos collaborateurs l'art énergétique de la calligraphie chinoise.
    </p>

    <div class="overflow-x-auto">
      <table class="min-w-full border border-gray-300 divide-y divide-gray-200">
        <thead class="bg-gray-100">
          <tr>
            <th class="px-4 py-2 text-left font-medium text-gray-700">Horaires</th>
            <th class="px-4 py-2 text-left font-medium text-gray-700">Entre 12 et 14 h</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <tr>
            <td class="px-4 py-2">Durée</td>
            <td class="px-4 py-2">Ateliers d'une heure</td>
          </tr>
          <tr class="bg-gray-50">
            <td class="px-4 py-2">Nombre de participants</td>
            <td class="px-4 py-2">De 6 à 12</td>
          </tr>
          <tr>
            <td class="px-4 py-2">Tarifs</td>
            <td class="px-4 py-2">90 euros de l'heure</td>
          </tr>
        </tbody>
      </table>
    </div>

    <h2 class="text-2xl font-semibold mt-10 mb-4">
      Interventions passées
    </h2>

    {eventsByYear.map(([year, events], index) => (
      <section>
        <details class="mb-4 year-section" open={index === 0}>
          <summary class="cursor-pointer text-xl font-bold mt-6 mb-3">
            {year}
          </summary>
          <ul class="space-y-4">
            {events.map(event => (
              <li
                key={event.key}
                class={`
                  border-b pb-2
                  odd:bg-gray-100
                  ${event.multiYear ? 'bg-indigo-100 text-indigo-900 font-semibold odd:bg-indigo-100' : ''}
                `}
              >
                <strong set:html={event.displayDate}></strong> — {event.titre}
                <br />
                <em>{event.lieu}</em>
                {event.details && (
                  <>
                    <br />
                    {event.details}
                  </>
                )}
              </li>
            ))}
          </ul>
        </details>
      </section>
    ))}

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const detailsList = document.querySelectorAll(".year-section");
        detailsList.forEach(details => {
          details.addEventListener("toggle", (e) => {
            if (details.open) {
              detailsList.forEach(other => {
                if (other !== details) other.removeAttribute("open");
              });
            }
          });
        });
      });
    </script>
  </main>
</Base>
